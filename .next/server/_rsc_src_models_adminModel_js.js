"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_models_adminModel_js";
exports.ids = ["_rsc_src_models_adminModel_js"];
exports.modules = {

/***/ "(rsc)/./src/models/adminModel.js":
/*!**********************************!*\
  !*** ./src/models/adminModel.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n\n\nif ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).Admin) {\n    delete (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).Admin;\n}\nconst adminSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    firstName: {\n        type: String,\n        required: true,\n        trim: true,\n        minlength: 2,\n        maxlength: 50\n    },\n    lastName: {\n        type: String,\n        required: true,\n        trim: true,\n        minlength: 2,\n        maxlength: 50\n    },\n    email: {\n        type: String,\n        required: true,\n        unique: true,\n        lowercase: true,\n        trim: true\n    },\n    password: {\n        type: String,\n        required: true,\n        select: false\n    },\n    // Role can be: super_admin, admin, moderator, support, etc.\n    role: {\n        type: String,\n        enum: [\n            \"super_admin\",\n            \"admin\",\n            \"moderator\",\n            \"support\"\n        ],\n        required: true,\n        default: \"admin\"\n    },\n    // Direct permissions assigned to the admin\n    permissions: {\n        type: [\n            String\n        ],\n        default: []\n    },\n    // Group-based permissions\n    groups: [\n        {\n            type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n            ref: \"AdminGroup\"\n        }\n    ],\n    isActive: {\n        type: Boolean,\n        default: true\n    },\n    lastLogin: {\n        type: Date\n    },\n    deletedAt: {\n        type: Date,\n        default: null\n    },\n    // Password reset\n    forgotPasswordToken: {\n        type: String,\n        select: false\n    },\n    forgotPasswordTokenExpiry: {\n        type: Date,\n        select: false\n    }\n}, {\n    timestamps: true,\n    toJSON: {\n        virtuals: true,\n        transform: function(_doc, ret) {\n            delete ret.password;\n            return ret;\n        }\n    },\n    toObject: {\n        virtuals: true\n    }\n});\nadminSchema.index({\n    email: 1\n}, {\n    unique: true\n});\nadminSchema.index({\n    role: 1\n});\nadminSchema.index({\n    isActive: 1\n});\n// Password hashing\nadminSchema.pre(\"save\", async function(next) {\n    if (!this.isModified(\"password\")) return next();\n    try {\n        const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().genSalt(12);\n        this.password = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(this.password, salt);\n        next();\n    } catch (err) {\n        next(err);\n    }\n});\nadminSchema.methods.comparePassword = async function(candidatePassword) {\n    if (!this.password) return false;\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().compare(candidatePassword, this.password);\n};\n// Effective permissions = union of direct permissions + group permissions\nadminSchema.virtual(\"effectivePermissions\").get(function() {\n    const direct = Array.isArray(this.permissions) ? this.permissions : [];\n    const fromGroups = Array.isArray(this.groupsPermissions) ? this.groupsPermissions : [];\n    return Array.from(new Set([\n        ...direct,\n        ...fromGroups\n    ]));\n});\nconst Admin = mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"Admin\", adminSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Admin);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU1vQyxhQUFhRixNQUFNQyxPQUFPLENBQUMsSUFBSSxDQUFDRSxpQkFBaUIsSUFBSSxJQUFJLENBQUNBLGlCQUFpQixHQUFHLEVBQUU7SUFDdEYsT0FBT0gsTUFBTUksSUFBSSxDQUFDLElBQUlDLElBQUk7V0FBSU47V0FBV0c7S0FBVztBQUN0RDtBQUVBLE1BQU12RCxRQUFRSCxxREFBYyxDQUFDLFNBQVNJO0FBQ3RDLGlFQUFlRCxLQUFLQSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvYXBwbGUvRG9jdW1lbnRzL2dpdGh1Yi9haW9uX2RlZmVuY2UtYWRtaW4vc3JjL21vZGVscy9hZG1pbk1vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcbmltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdGpzXCI7XG5cbmlmIChtb25nb29zZS5tb2RlbHMuQWRtaW4pIHtcbiAgZGVsZXRlIG1vbmdvb3NlLm1vZGVscy5BZG1pbjtcbn1cblxuY29uc3QgYWRtaW5TY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgZmlyc3ROYW1lOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIHRyaW06IHRydWUsIG1pbmxlbmd0aDogMiwgbWF4bGVuZ3RoOiA1MCB9LFxuICBsYXN0TmFtZTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlLCB0cmltOiB0cnVlLCBtaW5sZW5ndGg6IDIsIG1heGxlbmd0aDogNTAgfSxcbiAgZW1haWw6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSwgdW5pcXVlOiB0cnVlLCBsb3dlcmNhc2U6IHRydWUsIHRyaW06IHRydWUgfSxcbiAgcGFzc3dvcmQ6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSwgc2VsZWN0OiBmYWxzZSB9LFxuXG4gIC8vIFJvbGUgY2FuIGJlOiBzdXBlcl9hZG1pbiwgYWRtaW4sIG1vZGVyYXRvciwgc3VwcG9ydCwgZXRjLlxuICByb2xlOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGVudW06IFtcInN1cGVyX2FkbWluXCIsIFwiYWRtaW5cIiwgXCJtb2RlcmF0b3JcIiwgXCJzdXBwb3J0XCJdLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIGRlZmF1bHQ6IFwiYWRtaW5cIlxuICB9LFxuXG4gIC8vIERpcmVjdCBwZXJtaXNzaW9ucyBhc3NpZ25lZCB0byB0aGUgYWRtaW5cbiAgcGVybWlzc2lvbnM6IHsgdHlwZTogW1N0cmluZ10sIGRlZmF1bHQ6IFtdIH0sXG5cbiAgLy8gR3JvdXAtYmFzZWQgcGVybWlzc2lvbnNcbiAgZ3JvdXBzOiBbeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogXCJBZG1pbkdyb3VwXCIgfV0sXG5cbiAgaXNBY3RpdmU6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdHJ1ZSB9LFxuICBsYXN0TG9naW46IHsgdHlwZTogRGF0ZSB9LFxuICBkZWxldGVkQXQ6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogbnVsbCB9LFxuXG4gIC8vIFBhc3N3b3JkIHJlc2V0XG4gIGZvcmdvdFBhc3N3b3JkVG9rZW46IHsgdHlwZTogU3RyaW5nLCBzZWxlY3Q6IGZhbHNlIH0sXG4gIGZvcmdvdFBhc3N3b3JkVG9rZW5FeHBpcnk6IHsgdHlwZTogRGF0ZSwgc2VsZWN0OiBmYWxzZSB9XG59LCB7XG4gIHRpbWVzdGFtcHM6IHRydWUsXG4gIHRvSlNPTjoge1xuICAgIHZpcnR1YWxzOiB0cnVlLFxuICAgIHRyYW5zZm9ybTogZnVuY3Rpb24gKF9kb2MsIHJldCkge1xuICAgICAgZGVsZXRlIHJldC5wYXNzd29yZDtcbiAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuICB9LFxuICB0b09iamVjdDogeyB2aXJ0dWFsczogdHJ1ZSB9XG59KTtcblxuYWRtaW5TY2hlbWEuaW5kZXgoeyBlbWFpbDogMSB9LCB7IHVuaXF1ZTogdHJ1ZSB9KTtcbmFkbWluU2NoZW1hLmluZGV4KHsgcm9sZTogMSB9KTtcbmFkbWluU2NoZW1hLmluZGV4KHsgaXNBY3RpdmU6IDEgfSk7XG5cbi8vIFBhc3N3b3JkIGhhc2hpbmdcbmFkbWluU2NoZW1hLnByZShcInNhdmVcIiwgYXN5bmMgZnVuY3Rpb24gKG5leHQpIHtcbiAgaWYgKCF0aGlzLmlzTW9kaWZpZWQoXCJwYXNzd29yZFwiKSkgcmV0dXJuIG5leHQoKTtcbiAgdHJ5IHtcbiAgICBjb25zdCBzYWx0ID0gYXdhaXQgYmNyeXB0LmdlblNhbHQoMTIpO1xuICAgIHRoaXMucGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaCh0aGlzLnBhc3N3b3JkLCBzYWx0KTtcbiAgICBuZXh0KCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIG5leHQoZXJyKTtcbiAgfVxufSk7XG5cbmFkbWluU2NoZW1hLm1ldGhvZHMuY29tcGFyZVBhc3N3b3JkID0gYXN5bmMgZnVuY3Rpb24gKGNhbmRpZGF0ZVBhc3N3b3JkKSB7XG4gIGlmICghdGhpcy5wYXNzd29yZCkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gYXdhaXQgYmNyeXB0LmNvbXBhcmUoY2FuZGlkYXRlUGFzc3dvcmQsIHRoaXMucGFzc3dvcmQpO1xufTtcblxuLy8gRWZmZWN0aXZlIHBlcm1pc3Npb25zID0gdW5pb24gb2YgZGlyZWN0IHBlcm1pc3Npb25zICsgZ3JvdXAgcGVybWlzc2lvbnNcbmFkbWluU2NoZW1hLnZpcnR1YWwoXCJlZmZlY3RpdmVQZXJtaXNzaW9uc1wiKS5nZXQoZnVuY3Rpb24gKCkge1xuICBjb25zdCBkaXJlY3QgPSBBcnJheS5pc0FycmF5KHRoaXMucGVybWlzc2lvbnMpID8gdGhpcy5wZXJtaXNzaW9ucyA6IFtdO1xuICBjb25zdCBmcm9tR3JvdXBzID0gQXJyYXkuaXNBcnJheSh0aGlzLmdyb3Vwc1Blcm1pc3Npb25zKSA/IHRoaXMuZ3JvdXBzUGVybWlzc2lvbnMgOiBbXTtcbiAgcmV0dXJuIEFycmF5LmZyb20obmV3IFNldChbLi4uZGlyZWN0LCAuLi5mcm9tR3JvdXBzXSkpO1xufSk7XG5cbmNvbnN0IEFkbWluID0gbW9uZ29vc2UubW9kZWwoXCJBZG1pblwiLCBhZG1pblNjaGVtYSk7XG5leHBvcnQgZGVmYXVsdCBBZG1pbjtcblxuXG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJiY3J5cHQiLCJtb2RlbHMiLCJBZG1pbiIsImFkbWluU2NoZW1hIiwiU2NoZW1hIiwiZmlyc3ROYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidHJpbSIsIm1pbmxlbmd0aCIsIm1heGxlbmd0aCIsImxhc3ROYW1lIiwiZW1haWwiLCJ1bmlxdWUiLCJsb3dlcmNhc2UiLCJwYXNzd29yZCIsInNlbGVjdCIsInJvbGUiLCJlbnVtIiwiZGVmYXVsdCIsInBlcm1pc3Npb25zIiwiZ3JvdXBzIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImlzQWN0aXZlIiwiQm9vbGVhbiIsImxhc3RMb2dpbiIsIkRhdGUiLCJkZWxldGVkQXQiLCJmb3Jnb3RQYXNzd29yZFRva2VuIiwiZm9yZ290UGFzc3dvcmRUb2tlbkV4cGlyeSIsInRpbWVzdGFtcHMiLCJ0b0pTT04iLCJ2aXJ0dWFscyIsInRyYW5zZm9ybSIsIl9kb2MiLCJyZXQiLCJ0b09iamVjdCIsImluZGV4IiwicHJlIiwibmV4dCIsImlzTW9kaWZpZWQiLCJzYWx0IiwiZ2VuU2FsdCIsImhhc2giLCJlcnIiLCJtZXRob2RzIiwiY29tcGFyZVBhc3N3b3JkIiwiY2FuZGlkYXRlUGFzc3dvcmQiLCJjb21wYXJlIiwidmlydHVhbCIsImdldCIsImRpcmVjdCIsIkFycmF5IiwiaXNBcnJheSIsImZyb21Hcm91cHMiLCJncm91cHNQZXJtaXNzaW9ucyIsImZyb20iLCJTZXQiLCJtb2RlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/models/adminModel.js\n");

/***/ })

};
;